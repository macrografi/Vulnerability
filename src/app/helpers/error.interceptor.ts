import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { map, Observable, tap } from 'rxjs';
import { Injectable, Injector } from '@angular/core';
import { Router } from '@angular/router';

@Injectable()
export class ErrorInterceptor implements HttpInterceptor {
  constructor(private router: Router, private injector: Injector) {}
  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    return next.handle(req).pipe(
      map(
        (event: HttpEvent<any>) => {
          return event;
        },
        (err: any) => {
          let error: any = err.status;
          switch (error) {
            case 401:
              this.router.navigate(['auth/login']).then((r) => {});
              break;
            case 403:
              this.router.navigate(['error/403']).then((r) => {});
              break;
            case 404:
              this.router.navigate(['auth/404']).then((r) => {});
              break;
            default:
              break;
          }
        },
      ),
    );
  }
}
