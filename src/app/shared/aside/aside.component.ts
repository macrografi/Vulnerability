import { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';
import { Store } from '@ngxs/store';
import { AsideAction } from '../../action/aside.action';
import { AsideMenuService } from '../../service/aside.menu.service';
import { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';

@Component({
  selector: 'app-aside',
  templateUrl: 'aside.component.html',
  styleUrls: ['aside.component.scss'],
})
export class AsideComponent implements OnInit {
  isOpen = true;
  leftMenu = this.asideMenuService.leftMenu;
  activeIds = this.asideMenuService.activeIds;

  constructor(
    private store: Store,
    private asideMenuService: AsideMenuService,
    private renderer: Renderer2,
    private elem: ElementRef,
  ) {}

  ngOnInit() {
    this.store.dispatch([new AsideAction(this.isOpen)]);
    this.checkAside();
  }

  AsideAction(aside: boolean) {
    this.store.dispatch(new AsideAction(aside));
  }

  checkAside() {
    if (this.isOpen) {
      this.renderer.addClass(document.body, 'aside-mini');
    } else {
      this.renderer.removeClass(document.body, 'aside-mini');
    }
  }

  toggleAside() {
    this.isOpen = !this.isOpen;
    this.store.dispatch([new AsideAction(this.isOpen)]);
    this.checkAside();
  }

  setActive($event: any) {
    const elements = this.elem.nativeElement.querySelectorAll('.active');
    if (elements !== null) {
      elements.forEach((el: any) => {
        el.classList.remove('active');
      });
    }
    $event.currentTarget.className = 'active';
  }
}
